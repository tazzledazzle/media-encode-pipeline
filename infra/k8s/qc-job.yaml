apiVersion: batch/v1
kind: Job
metadata:
  name: qc-worker
  labels:
    app: media-encode-pipeline
    component: qc-worker
spec:
  template:
    metadata:
      labels:
        app: media-encode-pipeline
        component: qc-worker
    spec:
      containers:
      - name: qc-worker
        image: your-registry/qc-worker:latest
        imagePullPolicy: Always
        env:
        - name: AWS_REGION
          value: "us-east-1"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws_access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws_secret_access_key
        - name: AWS_DEFAULT_REGION
          value: "us-east-1"
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: username
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: password
        - name: RABBITMQ_VHOST
          value: "/"
        - name: RABBITMQ_QUEUE
          value: "qc-queue"
        resources:
          limits:
            memory: "1Gi"
            cpu: "1"
          requests:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: qc-cache
          mountPath: /tmp
      restartPolicy: Never
      volumes:
      - name: qc-cache
        emptyDir: {}
      serviceAccountName: qc-worker
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      tolerations:
      - key: "node-type"
        operator: "Equal"
        value: "worker"
        effect: "NoSchedule"